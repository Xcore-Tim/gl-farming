{
    "swagger": "2.0",
    "info": {
        "description": "Farming service API description.",
        "title": "Gipsyland Farming",
        "contact": {},
        "version": "2.0"
    },
    "paths": {
        "/v2/accountTypes/create": {
            "post": {
                "description": "creates account type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Create account type",
                "parameters": [
                    {
                        "description": "account type body json",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountTypes/delete": {
            "delete": {
                "description": "Deletes account type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Delete account type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account type id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountTypes/delete/all": {
            "delete": {
                "description": "deletes all account types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Delete all account types",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/accountTypes/get": {
            "get": {
                "description": "get account types by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Get account types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account type id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountType"
                        }
                    }
                }
            }
        },
        "/v2/accountTypes/get/all": {
            "get": {
                "description": "returns all account types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Get all account types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountType"
                            }
                        }
                    }
                }
            }
        },
        "/v2/currency/create": {
            "post": {
                "description": "creates currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Create currency",
                "parameters": [
                    {
                        "description": "currency body json",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Currency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/currency/delete": {
            "delete": {
                "description": "Deletes currency by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Delete currency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "currency id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/currency/delete/all": {
            "delete": {
                "description": "deletes all currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Delete all currency",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/currency/get": {
            "get": {
                "description": "get currency by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Get currency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "currency id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Currency"
                        }
                    }
                }
            }
        },
        "/v2/currency/get/all": {
            "get": {
                "description": "returns all currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Get all currency",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Currency"
                            }
                        }
                    }
                }
            }
        },
        "/v2/locations/create": {
            "post": {
                "description": "creates location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create location",
                "parameters": [
                    {
                        "description": "location body json",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/locations/delete": {
            "delete": {
                "description": "Deletes location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "location id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/locations/delete/all": {
            "delete": {
                "description": "deletes all locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete all locations",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/locations/get": {
            "get": {
                "description": "get location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "location id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                }
            }
        },
        "/v2/locations/get/all": {
            "get": {
                "description": "returns all locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get all locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Location"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AccountType": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Currency": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "iso": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "models.Location": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "iso": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}