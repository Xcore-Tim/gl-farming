// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v2/accountRequests/cancel": {
            "put": {
                "description": "cancels account request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account requests"
                ],
                "summary": "Cancel account request",
                "parameters": [
                    {
                        "description": "cancel request body info",
                        "name": "cancelRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.CancelAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountRequests/complete": {
            "put": {
                "description": "Completes account request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account requests"
                ],
                "summary": "Complete account request",
                "parameters": [
                    {
                        "description": "complete request body",
                        "name": "updateRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.CompleteAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountRequests/create": {
            "post": {
                "description": "creates new account request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account requests"
                ],
                "summary": "Create account request",
                "parameters": [
                    {
                        "description": "create request body info",
                        "name": "createRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountRequest"
                            }
                        }
                    }
                }
            }
        },
        "/v2/accountRequests/delete/all": {
            "delete": {
                "description": "deletes all account requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account requests"
                ],
                "summary": "Delete all account requests",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/accountRequests/get/all": {
            "get": {
                "description": "returns all account requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account requests"
                ],
                "summary": "Get all account requests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountRequest"
                            }
                        }
                    }
                }
            }
        },
        "/v2/accountRequests/take": {
            "put": {
                "description": "Takes account request in work",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account requests"
                ],
                "summary": "Take account request in work",
                "parameters": [
                    {
                        "type": "string",
                        "description": "taken request id",
                        "name": "requestID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountRequests/update": {
            "put": {
                "description": "Updates account request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account requests"
                ],
                "summary": "Update account request",
                "parameters": [
                    {
                        "description": "update request body",
                        "name": "updateRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountTypes/create": {
            "post": {
                "description": "creates account type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Create account type",
                "parameters": [
                    {
                        "description": "account type body json",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountTypes/delete": {
            "delete": {
                "description": "Deletes account type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Delete account type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account type id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/accountTypes/delete/all": {
            "delete": {
                "description": "deletes all account types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Delete all account types",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/accountTypes/get": {
            "get": {
                "description": "get account types by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Get account types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account type id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountType"
                        }
                    }
                }
            }
        },
        "/v2/accountTypes/get/all": {
            "get": {
                "description": "returns all account types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account types"
                ],
                "summary": "Get all account types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountType"
                            }
                        }
                    }
                }
            }
        },
        "/v2/currency/create": {
            "post": {
                "description": "creates currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Create currency",
                "parameters": [
                    {
                        "description": "currency body json",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Currency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/currency/delete": {
            "delete": {
                "description": "Deletes currency by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Delete currency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "currency id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/currency/delete/all": {
            "delete": {
                "description": "deletes all currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Delete all currency",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/currency/get": {
            "get": {
                "description": "get currency by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Get currency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "currency id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Currency"
                        }
                    }
                }
            }
        },
        "/v2/currency/get/all": {
            "get": {
                "description": "returns all currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Get all currency",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Currency"
                            }
                        }
                    }
                }
            }
        },
        "/v2/locations/create": {
            "post": {
                "description": "creates location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create location",
                "parameters": [
                    {
                        "description": "location body json",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/locations/delete": {
            "delete": {
                "description": "Deletes location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "location id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/locations/delete/all": {
            "delete": {
                "description": "deletes all locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete all locations",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v2/locations/get": {
            "get": {
                "description": "get location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "location id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Location"
                        }
                    }
                }
            }
        },
        "/v2/locations/get/all": {
            "get": {
                "description": "returns all locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get all locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Location"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AccountRequest": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "baseCurrency": {
                    "$ref": "#/definitions/models.Currency"
                },
                "basePrice": {
                    "type": "number"
                },
                "baseRate": {
                    "type": "number"
                },
                "baseTotal": {
                    "type": "number"
                },
                "buyer": {
                    "$ref": "#/definitions/models.Employee"
                },
                "cancellationCause": {
                    "type": "string"
                },
                "cancelledBy": {
                    "$ref": "#/definitions/models.Employee"
                },
                "completedBy": {
                    "$ref": "#/definitions/models.Employee"
                },
                "crossRate": {
                    "type": "number"
                },
                "currency": {
                    "$ref": "#/definitions/models.Currency"
                },
                "dateCancelled": {
                    "type": "integer"
                },
                "dateCompleted": {
                    "type": "integer"
                },
                "dateCreated": {
                    "type": "integer"
                },
                "dateReturned": {
                    "type": "integer"
                },
                "dateTaken": {
                    "type": "integer"
                },
                "dateUpdated": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "farmer": {
                    "$ref": "#/definitions/models.Employee"
                },
                "fileName": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "rate": {
                    "type": "number"
                },
                "returnedBy": {
                    "$ref": "#/definitions/models.Employee"
                },
                "status": {
                    "type": "integer"
                },
                "takenBy": {
                    "$ref": "#/definitions/models.Employee"
                },
                "team": {
                    "$ref": "#/definitions/models.Team"
                },
                "total": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/models.AccountType"
                },
                "updatedBy": {
                    "$ref": "#/definitions/models.Employee"
                },
                "valid": {
                    "type": "integer"
                }
            }
        },
        "models.AccountType": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CancelAccountRequest": {
            "type": "object",
            "properties": {
                "cancellationCause": {
                    "type": "string"
                },
                "cancelledBy": {
                    "$ref": "#/definitions/models.Employee"
                },
                "dateCancelled": {
                    "type": "integer"
                },
                "requestID": {
                    "type": "string"
                }
            }
        },
        "models.CompleteAccountRequest": {
            "type": "object",
            "properties": {
                "currencyID": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requestID": {
                    "type": "string"
                },
                "valid": {
                    "type": "integer"
                }
            }
        },
        "models.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "currencyID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "locationID": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "typeID": {
                    "type": "string"
                }
            }
        },
        "models.Currency": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "iso": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "models.Employee": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "integer"
                },
                "fullName": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "models.Location": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "iso": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Team": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "teamlead": {
                    "$ref": "#/definitions/models.Employee"
                }
            }
        },
        "models.UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "currencyID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "locationID": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "requestID": {
                    "type": "string"
                },
                "typeID": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Gipsyland Farming",
	Description:      "Farming service API description.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
